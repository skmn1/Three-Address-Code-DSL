/**
 * generated by Xtext 2.25.0
 */
package fr.ensma.dsl.threeAddressCode.impl;

import fr.ensma.dsl.threeAddressCode.Function;
import fr.ensma.dsl.threeAddressCode.FunctionArgument;
import fr.ensma.dsl.threeAddressCode.FunctionCall;
import fr.ensma.dsl.threeAddressCode.ThreeAddressCodePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionCallImpl#getFunctionCall <em>Function Call</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionCallImpl#getFunctionArgument <em>Function Argument</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionCallImpl extends MinimalEObjectImpl.Container implements FunctionCall
{
  /**
   * The cached value of the '{@link #getFunctionCall() <em>Function Call</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionCall()
   * @generated
   * @ordered
   */
  protected EList<Function> functionCall;

  /**
   * The cached value of the '{@link #getFunctionArgument() <em>Function Argument</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionArgument()
   * @generated
   * @ordered
   */
  protected EList<FunctionArgument> functionArgument;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ThreeAddressCodePackage.Literals.FUNCTION_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Function> getFunctionCall()
  {
    if (functionCall == null)
    {
      functionCall = new EObjectResolvingEList<Function>(Function.class, this, ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_CALL);
    }
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionArgument> getFunctionArgument()
  {
    if (functionArgument == null)
    {
      functionArgument = new EObjectContainmentEList<FunctionArgument>(FunctionArgument.class, this, ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT);
    }
    return functionArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT:
        return ((InternalEList<?>)getFunctionArgument()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_CALL:
        return getFunctionCall();
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT:
        return getFunctionArgument();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_CALL:
        getFunctionCall().clear();
        getFunctionCall().addAll((Collection<? extends Function>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT:
        getFunctionArgument().clear();
        getFunctionArgument().addAll((Collection<? extends FunctionArgument>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_CALL:
        getFunctionCall().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT:
        getFunctionArgument().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_CALL:
        return functionCall != null && !functionCall.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_CALL__FUNCTION_ARGUMENT:
        return functionArgument != null && !functionArgument.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FunctionCallImpl
