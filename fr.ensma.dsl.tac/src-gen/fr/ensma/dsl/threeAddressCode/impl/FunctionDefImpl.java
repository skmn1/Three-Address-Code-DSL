/**
 * generated by Xtext 2.25.0
 */
package fr.ensma.dsl.threeAddressCode.impl;

import fr.ensma.dsl.threeAddressCode.AssignOperation;
import fr.ensma.dsl.threeAddressCode.Function;
import fr.ensma.dsl.threeAddressCode.FunctionCall;
import fr.ensma.dsl.threeAddressCode.FunctionDef;
import fr.ensma.dsl.threeAddressCode.FunctionParam;
import fr.ensma.dsl.threeAddressCode.Goto;
import fr.ensma.dsl.threeAddressCode.If;
import fr.ensma.dsl.threeAddressCode.Label;
import fr.ensma.dsl.threeAddressCode.Struct;
import fr.ensma.dsl.threeAddressCode.ThreeAddressCodePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getFunctionparam <em>Functionparam</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getStruct <em>Struct</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getLabel <em>Label</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getGoto <em>Goto</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getIf <em>If</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getFunctionCall <em>Function Call</em>}</li>
 *   <li>{@link fr.ensma.dsl.threeAddressCode.impl.FunctionDefImpl#getAssignOp <em>Assign Op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionDefImpl extends MinimalEObjectImpl.Container implements FunctionDef
{
  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected EList<Function> function;

  /**
   * The cached value of the '{@link #getFunctionparam() <em>Functionparam</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionparam()
   * @generated
   * @ordered
   */
  protected EList<FunctionParam> functionparam;

  /**
   * The cached value of the '{@link #getStruct() <em>Struct</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct()
   * @generated
   * @ordered
   */
  protected EList<Struct> struct;

  /**
   * The cached value of the '{@link #getLabel() <em>Label</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected EList<Label> label;

  /**
   * The cached value of the '{@link #getGoto() <em>Goto</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGoto()
   * @generated
   * @ordered
   */
  protected EList<Goto> goto_;

  /**
   * The cached value of the '{@link #getIf() <em>If</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIf()
   * @generated
   * @ordered
   */
  protected EList<If> if_;

  /**
   * The cached value of the '{@link #getFunctionCall() <em>Function Call</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionCall()
   * @generated
   * @ordered
   */
  protected EList<FunctionCall> functionCall;

  /**
   * The cached value of the '{@link #getAssignOp() <em>Assign Op</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignOp()
   * @generated
   * @ordered
   */
  protected EList<AssignOperation> assignOp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ThreeAddressCodePackage.Literals.FUNCTION_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Function> getFunction()
  {
    if (function == null)
    {
      function = new EObjectContainmentEList<Function>(Function.class, this, ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION);
    }
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionParam> getFunctionparam()
  {
    if (functionparam == null)
    {
      functionparam = new EObjectContainmentEList<FunctionParam>(FunctionParam.class, this, ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM);
    }
    return functionparam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Struct> getStruct()
  {
    if (struct == null)
    {
      struct = new EObjectContainmentEList<Struct>(Struct.class, this, ThreeAddressCodePackage.FUNCTION_DEF__STRUCT);
    }
    return struct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Label> getLabel()
  {
    if (label == null)
    {
      label = new EObjectContainmentEList<Label>(Label.class, this, ThreeAddressCodePackage.FUNCTION_DEF__LABEL);
    }
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Goto> getGoto()
  {
    if (goto_ == null)
    {
      goto_ = new EObjectContainmentEList<Goto>(Goto.class, this, ThreeAddressCodePackage.FUNCTION_DEF__GOTO);
    }
    return goto_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<If> getIf()
  {
    if (if_ == null)
    {
      if_ = new EObjectContainmentEList<If>(If.class, this, ThreeAddressCodePackage.FUNCTION_DEF__IF);
    }
    return if_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionCall> getFunctionCall()
  {
    if (functionCall == null)
    {
      functionCall = new EObjectContainmentEList<FunctionCall>(FunctionCall.class, this, ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL);
    }
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AssignOperation> getAssignOp()
  {
    if (assignOp == null)
    {
      assignOp = new EObjectContainmentEList<AssignOperation>(AssignOperation.class, this, ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP);
    }
    return assignOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION:
        return ((InternalEList<?>)getFunction()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM:
        return ((InternalEList<?>)getFunctionparam()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__STRUCT:
        return ((InternalEList<?>)getStruct()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__LABEL:
        return ((InternalEList<?>)getLabel()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__GOTO:
        return ((InternalEList<?>)getGoto()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__IF:
        return ((InternalEList<?>)getIf()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL:
        return ((InternalEList<?>)getFunctionCall()).basicRemove(otherEnd, msgs);
      case ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP:
        return ((InternalEList<?>)getAssignOp()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION:
        return getFunction();
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM:
        return getFunctionparam();
      case ThreeAddressCodePackage.FUNCTION_DEF__STRUCT:
        return getStruct();
      case ThreeAddressCodePackage.FUNCTION_DEF__LABEL:
        return getLabel();
      case ThreeAddressCodePackage.FUNCTION_DEF__GOTO:
        return getGoto();
      case ThreeAddressCodePackage.FUNCTION_DEF__IF:
        return getIf();
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL:
        return getFunctionCall();
      case ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP:
        return getAssignOp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION:
        getFunction().clear();
        getFunction().addAll((Collection<? extends Function>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM:
        getFunctionparam().clear();
        getFunctionparam().addAll((Collection<? extends FunctionParam>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__STRUCT:
        getStruct().clear();
        getStruct().addAll((Collection<? extends Struct>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__LABEL:
        getLabel().clear();
        getLabel().addAll((Collection<? extends Label>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__GOTO:
        getGoto().clear();
        getGoto().addAll((Collection<? extends Goto>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__IF:
        getIf().clear();
        getIf().addAll((Collection<? extends If>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL:
        getFunctionCall().clear();
        getFunctionCall().addAll((Collection<? extends FunctionCall>)newValue);
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP:
        getAssignOp().clear();
        getAssignOp().addAll((Collection<? extends AssignOperation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION:
        getFunction().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM:
        getFunctionparam().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__STRUCT:
        getStruct().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__LABEL:
        getLabel().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__GOTO:
        getGoto().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__IF:
        getIf().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL:
        getFunctionCall().clear();
        return;
      case ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP:
        getAssignOp().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION:
        return function != null && !function.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTIONPARAM:
        return functionparam != null && !functionparam.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__STRUCT:
        return struct != null && !struct.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__LABEL:
        return label != null && !label.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__GOTO:
        return goto_ != null && !goto_.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__IF:
        return if_ != null && !if_.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__FUNCTION_CALL:
        return functionCall != null && !functionCall.isEmpty();
      case ThreeAddressCodePackage.FUNCTION_DEF__ASSIGN_OP:
        return assignOp != null && !assignOp.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FunctionDefImpl
