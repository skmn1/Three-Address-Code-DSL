/**
 * generated by Xtext 2.25.0
 */
package fr.ensma.dsl.threeAddressCode.impl;

import fr.ensma.dsl.threeAddressCode.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ThreeAddressCodeFactoryImpl extends EFactoryImpl implements ThreeAddressCodeFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ThreeAddressCodeFactory init()
  {
    try
    {
      ThreeAddressCodeFactory theThreeAddressCodeFactory = (ThreeAddressCodeFactory)EPackage.Registry.INSTANCE.getEFactory(ThreeAddressCodePackage.eNS_URI);
      if (theThreeAddressCodeFactory != null)
      {
        return theThreeAddressCodeFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ThreeAddressCodeFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ThreeAddressCodeFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ThreeAddressCodePackage.TAC: return createTAC();
      case ThreeAddressCodePackage.FUNCTION_DEF: return createFunctionDef();
      case ThreeAddressCodePackage.FUNCTION_CALL: return createFunctionCall();
      case ThreeAddressCodePackage.FUNCTION_PARAM: return createFunctionParam();
      case ThreeAddressCodePackage.FUNCTION_ARGUMENT: return createFunctionArgument();
      case ThreeAddressCodePackage.DATA_TYPE: return createDataType();
      case ThreeAddressCodePackage.STRUCT: return createStruct();
      case ThreeAddressCodePackage.GOTO: return createGoto();
      case ThreeAddressCodePackage.LABEL: return createLabel();
      case ThreeAddressCodePackage.IF: return createIf();
      case ThreeAddressCodePackage.ASSIGN_OPERATION: return createAssignOperation();
      case ThreeAddressCodePackage.FUNCTION: return createFunction();
      case ThreeAddressCodePackage.BOULEAN_EXRPESSION: return createBouleanExrpession();
      case ThreeAddressCodePackage.ARITHMETIC_OPERATION: return createArithmeticOperation();
      case ThreeAddressCodePackage.LOGICAL_OPERATION: return createLogicalOperation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TAC createTAC()
  {
    TACImpl tac = new TACImpl();
    return tac;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionDef createFunctionDef()
  {
    FunctionDefImpl functionDef = new FunctionDefImpl();
    return functionDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionCall createFunctionCall()
  {
    FunctionCallImpl functionCall = new FunctionCallImpl();
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionParam createFunctionParam()
  {
    FunctionParamImpl functionParam = new FunctionParamImpl();
    return functionParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionArgument createFunctionArgument()
  {
    FunctionArgumentImpl functionArgument = new FunctionArgumentImpl();
    return functionArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType createDataType()
  {
    DataTypeImpl dataType = new DataTypeImpl();
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Struct createStruct()
  {
    StructImpl struct = new StructImpl();
    return struct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Goto createGoto()
  {
    GotoImpl goto_ = new GotoImpl();
    return goto_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Label createLabel()
  {
    LabelImpl label = new LabelImpl();
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public If createIf()
  {
    IfImpl if_ = new IfImpl();
    return if_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignOperation createAssignOperation()
  {
    AssignOperationImpl assignOperation = new AssignOperationImpl();
    return assignOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BouleanExrpession createBouleanExrpession()
  {
    BouleanExrpessionImpl bouleanExrpession = new BouleanExrpessionImpl();
    return bouleanExrpession;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithmeticOperation createArithmeticOperation()
  {
    ArithmeticOperationImpl arithmeticOperation = new ArithmeticOperationImpl();
    return arithmeticOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicalOperation createLogicalOperation()
  {
    LogicalOperationImpl logicalOperation = new LogicalOperationImpl();
    return logicalOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ThreeAddressCodePackage getThreeAddressCodePackage()
  {
    return (ThreeAddressCodePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ThreeAddressCodePackage getPackage()
  {
    return ThreeAddressCodePackage.eINSTANCE;
  }

} //ThreeAddressCodeFactoryImpl
